{"ast":null,"code":"var _jsxFileName = \"/home/rishidharuman/react git/src/Errorhandeling.js\",\n  _s = $RefreshSig$();\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    if (error instanceof CountLimitError) {\n      return {\n        hasError: true,\n        errorMessage: 'Count limit exceeded.'\n      };\n    } else {\n      return {\n        hasError: true,\n        errorMessage: 'Something went wrong.'\n      };\n    }\n  }\n  componentDidCatch(error, errorInfo) {\n    // Log the error to an error reporting service\n    console.error('Error Boundary caught an error:', error, errorInfo);\n  }\n  render() {\n    if (this.state.hasError) {\n      // Fallback UI to display when an error is caught\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 14\n      }, this);\n    }\n    return this.props.children;\n  }\n}\nclass CountLimitError extends Error {}\nfunction MyComponent(props) {\n  _s();\n  const [count, setCount] = React.useState(0);\n  function handleClick() {\n    setCount(count + 1);\n    if (count >= 10) {\n      throw new CountLimitError();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Click Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(MyComponent, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = MyComponent;\nexport default function ErrorHandel() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n      children: /*#__PURE__*/_jsxDEV(MyComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_c2 = ErrorHandel;\nvar _c, _c2;\n$RefreshReg$(_c, \"MyComponent\");\n$RefreshReg$(_c2, \"ErrorHandel\");","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","ErrorBoundary","constructor","props","state","hasError","getDerivedStateFromError","error","CountLimitError","errorMessage","componentDidCatch","errorInfo","console","render","children","fileName","_jsxFileName","lineNumber","columnNumber","Error","MyComponent","_s","count","setCount","useState","handleClick","onClick","_c","ErrorHandel","_c2","$RefreshReg$"],"sources":["/home/rishidharuman/react git/src/Errorhandeling.js"],"sourcesContent":["import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    if (error instanceof CountLimitError) {\n      return { hasError: true, errorMessage: 'Count limit exceeded.' };\n    } else {\n      return { hasError: true, errorMessage: 'Something went wrong.' };\n    }\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Log the error to an error reporting service\n    console.error('Error Boundary caught an error:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // Fallback UI to display when an error is caught\n      return <h1>{this.state.errorMessage}</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n\nclass CountLimitError extends Error {}\n\nfunction MyComponent(props) {\n  const [count, setCount] = React.useState(0);\n\n  function handleClick() {\n    setCount(count + 1);\n    if (count >= 10) {\n      throw new CountLimitError();\n    }\n  }\n\n  return (\n    <div>\n      <button onClick={handleClick}>Click Me</button>\n      <p>Count: {count}</p>\n    </div>\n  );\n}\n\nexport default function ErrorHandel()\n {\n  return (\n    <div>\n      <h1>My App</h1>\n      <ErrorBoundary>\n        <MyComponent />\n      </ErrorBoundary>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,aAAa,SAASH,SAAS,CAAC;EACpCI,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MAAEC,QAAQ,EAAE;IAAM,CAAC;EAClC;EAEA,OAAOC,wBAAwBA,CAACC,KAAK,EAAE;IACrC;IACA,IAAIA,KAAK,YAAYC,eAAe,EAAE;MACpC,OAAO;QAAEH,QAAQ,EAAE,IAAI;QAAEI,YAAY,EAAE;MAAwB,CAAC;IAClE,CAAC,MAAM;MACL,OAAO;QAAEJ,QAAQ,EAAE,IAAI;QAAEI,YAAY,EAAE;MAAwB,CAAC;IAClE;EACF;EAEAC,iBAAiBA,CAACH,KAAK,EAAEI,SAAS,EAAE;IAClC;IACAC,OAAO,CAACL,KAAK,CAAC,iCAAiC,EAAEA,KAAK,EAAEI,SAAS,CAAC;EACpE;EAEAE,MAAMA,CAAA,EAAG;IACP,IAAI,IAAI,CAACT,KAAK,CAACC,QAAQ,EAAE;MACvB;MACA,oBAAOL,OAAA;QAAAc,QAAA,EAAK,IAAI,CAACV,KAAK,CAACK;MAAY;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM;IAC3C;IAEA,OAAO,IAAI,CAACf,KAAK,CAACW,QAAQ;EAC5B;AACF;AAEA,MAAMN,eAAe,SAASW,KAAK,CAAC;AAEpC,SAASC,WAAWA,CAACjB,KAAK,EAAE;EAAAkB,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,KAAK,CAAC2B,QAAQ,CAAC,CAAC,CAAC;EAE3C,SAASC,WAAWA,CAAA,EAAG;IACrBF,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACnB,IAAIA,KAAK,IAAI,EAAE,EAAE;MACf,MAAM,IAAId,eAAe,EAAE;IAC7B;EACF;EAEA,oBACER,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAQ0B,OAAO,EAAED,WAAY;MAAAX,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC/ClB,OAAA;MAAAc,QAAA,GAAG,SAAO,EAACQ,KAAK;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACjB;AAEV;AAACG,EAAA,CAhBQD,WAAW;AAAAO,EAAA,GAAXP,WAAW;AAkBpB,eAAe,SAASQ,WAAWA,CAAA,EAClC;EACC,oBACE5B,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACflB,OAAA,CAACC,aAAa;MAAAa,QAAA,eACZd,OAAA,CAACoB,WAAW;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACZ;AAEV;AAACW,GAAA,GAVuBD,WAAW;AAAA,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}